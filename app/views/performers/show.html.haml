=content_for :head do
  :javascript
    function scrollToCommentInput() {
      YmCore.scrollTo($('#new_post'));
    }
    $(document).ready(function() {
      $('#go-to-comment').click(function(event) {
        event.preventDefault();
        $('#tour-tabs a[href="#comments"]').tab('show');
        window.setTimeout(scrollToCommentInput, 200);
      });
    });

.row
  .span12
    %h1.tour
      %i.icon-user
      =performer.name
.row
  .span3
    .row.profile-left-col
      .well
        =performer.image.present? ? image_for(performer, "220x150#") : image_tag("placeholder-performer.jpg")
        
        -if current_user.performer_id == performer.id
          .black-block-links
            =link_to edit_performer_path(current_user.performer_id), :class => "btn" do
              %i.icon-pencil
              Edit profile
          .notifications
            %i.icon-group
            %span.number=current_user.other_notifications.count
            notifications
            =link_to "view", "#notifications", :'data-toggle' => 'tab'
          .messages
            %i.icon-envelope
            %span.number=current_user.message_notifications.count
            messages
            =link_to "view", "#messages", :'data-toggle' => 'tab'  
        
        -if performer.genre_list.present?
          .genres
            =comma_list_tags(performer, :genres)
        -if performer.tours.present?
          .performer-tours
            -if performer.tours.where("end_on > ?", Date.today).present?
              .current-tours
                %h4
                  %i.icon-star
                  Current shows
                -performer.tours.where("end_on > ?", Date.today).each do |tour|
                  =link_to_self tour
                  %br
            -if performer.tours.where("end_on < ?", Date.today).present?
              .past-tours
                %h4
                  %i.icon-star
                  Past shows
                -performer.tours.where("end_on > ?", Date.today).each do |tour|
                  =link_to_self tour
                  %br
        -if performer.links.present?
          -if performer.links_without_twitter_and_facebook.present?
            %ul.unstyled.links
              -performer.links_without_twitter_and_facebook.each do |link|
                %li
                  =link_to(link, link.url, :target => '_blank')
          -if performer.links_only_twitter_and_facebook.present?
            -performer.links_only_twitter_and_facebook.each do |link|
              =facebook_twitter_link(link)
        .black-block-links
          =link_to new_performer_message_path(performer), :class => "btn" do
            %i.icon-envelope
            Send a message
          
          =like_link(performer, :like_text => "Add to favourites", :unlike_text => "Remove", :class => "btn")
          =link_to "", :class => "btn", :id => "go-to-comment" do
            %i.icon-pencil
            Post a comment
          -if can?(:edit,performer)
            =link_to edit_performer_path(performer), {:class => "btn"} do
              %i.icon-edit
              Edit Performer      

  .span9
    %ul.nav.nav-tabs#tour-tabs
      %li.active
        =link_to  "About", "#about", :'data-toggle' => 'tab'      
      -if current_user.performer_id == performer.id
        %li
          =link_to "My Notifications", "#notifications", :'data-toggle' => 'tab'
        %li
          =link_to "My Messages", "#messages", :'data-toggle' => 'tab'

      %li
        =link_to "Media", "#media", :'data-toggle' => 'tab'
      %li
        =link_to "Reviews", "#reviews", :'data-toggle' => 'tab'
      %li
        =link_to "Updates", "#updates", :'data-toggle' => 'tab'
      %li
        =link_to "Comments", "#comments", :'data-toggle' => 'tab'
    .tab-content
      #about.tab-pane.fade.in.active
        .well
          =simple_format(performer.description)
      
      -if current_user.performer_id == performer.id
        #notifications.tab-pane.fade.in
          .well
            -if current_user.other_notifications.where(:read => false).size == 0
              %p You have no notifications
            -else
              %ul.unstyled
                -current_user.other_notifications.where(:read => false).reverse_order.each do |notification|
                  -if notification.resource.is_a?(Post)
                    -notification_group = notification.resource.target
                    -notification_user = notification.resource.user
                  -elsif notification.resource.is_a?(Comment)
                    -notification_group = notification.resource.post.target
                    -notification_user = notification.resource.post.user
                  %li
                    .notification_user.pull-left.clear.mb-1.mt-1
                      =link_to(image_for(notification_user, "37x37#"), notification_user, :class => "pull-left")
                      .pull-left
                        =link_to_self(notification_user)
                        %i.icon-chevron-right
                        =link_to_self(notification_group)
                        %br
                        %span.small-info-text
                          =time_ago_in_words(notification.created_at)
                          ago
                    .notification_content.clear
                    
      -if current_user.performer_id == performer.id              
        #messages.tab-pane.fade.in
          .well
            =render "messages/index", :threads => current_user.threads            
          

      #spec.tab-pane.fade.in
        .well

      #media.tab-pane.fade.in
        .well
          -if performer.slideshow.present? 
            =render("organisations/media", :slideshow => performer.slideshow)
            .clearfix
          -else
            No media present
            
      #reviews.tab-pane.fade.in
        .row
          .span9
            .well
              -performer.external_reviews.each do |review|
                =simple_format(review.review)
      
      #pricing.tab-pane.fade.in
        .row
          .span9
            .well
            
      #updates.tab-pane.fade.in
        .row
          .span9
            .well
              .row
                .span8
                  -if can?(:create, Post) && (performer.users.include?(current_user) || current_user.admin?)
                    =render("posts/remote_form", :post => current_user.updates.build(:target => performer))
                  =render("posts/posts", :posts => performer.updates.page(params[:page]))
            
      #comments.tab-pane.fade.in
        .row
          .span9
            .well
              .row
                .span8
                  -if can?(:create, Post)
                    =render("posts/remote_form", :post => current_user.posts.build(:target => performer))
                  =render("posts/posts", :posts => performer.posts.page(params[:page]))
            
                
            
.row
  .span9
    =options_panel do
      =back_link
