-if venue.has_lat_lng?
  =google_maps_javascript_include_tag
  =content_for :head do
    :javascript
      $(document).ready(function() {
        VenuesMap.venues = [#{venue.to_json(:only => [:id, :name, :lat, :lng], :methods => [:infowindow_image_url, :short_description])}];
        VenuesMap.init()
      });
  
.row
  .span3
    .row.profile-left-col
      .span3
        =image_for(venue, "220x") if venue.image
      -if venue.has_lat_lng?
        .span3.mt-2
          #map-canvas{:style => "height:220px;width:100%"}
          =link_if_can("Edit marker location", [:edit_location, venue])
      -elsif can?(:edit_location,venue)
        .span3.mt-2
          .alert.alert-error
            %strong LOCATION MISSING 
            %p We couldn't work out the location of this venue from its address.
            =link_to("Click here to set it", edit_location_venue_path(venue))
      .span3.mt-2
        %h4 Region
        %p=venue.region
      -if venue.address.present?
        .span3.mt-2
          %h4 Address
          %ul.unstyled
            %li
              =venue
              %br
              =render_address(venue)
      -if venue.user
        .span3.mt-2
          %h4 Booking contact
          =link_to_self(venue.user)
          %ul.unstyled          
            -if venue.user.phone.present?
              %li
                Tel:
                =internationalize_phone_number(venue.user.phone)
            -if venue.user.email.present?
              %li
                Email:
                =mail_to venue.user.email, venue.user.email
      -if venue.any_present?(:keyholder_name, :keyholder_email, :keyholder_phone)
        .span3.mt-2
          %h4 Keyholder contact
          =venue.keyholder_name
          %ul.unstyled          
            -if venue.keyholder_phone.present?
              %li
                Tel:
                =internationalize_phone_number(venue.keyholder_phone)
            -if venue.keyholder_email.present?
              %li
                Email:
                =mail_to venue.keyholder_email, venue.keyholder_email
      -if !venue.links.empty?
        .span3.mt-2
          %h4 Links
          %ul.unstyled.links
            -venue.links.each do |link|
              %li
                =image_tag(link.favicon)
                =link_to(link, link.url, :target => '_blank')

  .span9
    %h1
      =venue
      %small=link_to_self(venue.promoter)
    %ul.nav.nav-tabs
      %li.active
        =link_to("Profile", "#profile", :data => {:toggle => "tab"})
      %li
        =link_to("Technical details", "#technical", :data => {:toggle => "tab"})
    .tab-content
      #profile.tab-pane.fade.in.active
        =simple_format(venue.description)
        -if (media_posts = venue.posts.where("image_uid LIKE '%'").limit(8)).present?
          .row.mt-2
            .span9
              %h4 Photos/videos
              .row.mt-1
                -media_posts.each do |media_post|
                  .span1.mb-1
                    =link_to("#", :data => {:toggle => "modal", :backdrop => false, :"modal-url" => modal_post_path(media_post), :"modal-id" => "post_modal"}) do
                      =image_for(media_post, '60x60#', :class => "#{media_post.has_video? ? 'video-image' : ''}")        
        -if posts.present? || can?(:create, Post)
          .row.mt-2
            .span9
              %h4.mb-1 Updates
              -if can?(:create, Post)
                =render("posts/remote_form", :post => current_user.posts.build(:target => venue))
              =render("posts/posts", :posts => posts)
      #technical.tab-pane.fade
        =render("venues/technical", :venue => venue)

.row.mt-2
  .span9
    =options_panel do
      =back_link
      =link_if_can("Edit venue", [:edit, venue])
      =link_if_can("Delete venue", [:destroy, venue], :confirm => "Are you sure?")
